<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.nlog-project.org/schemas/NLog.xsd NLog.xsd"
      autoReload="true"
      throwExceptions="false"
      internalLogLevel="Off" internalLogFile="c:\temp\nlog-internal.log" >


  <!-- optional, add some variabeles
  https://github.com/nlog/NLog/wiki/Configuration-file#variables
  -->
  <variable name="myvar" value="myvalue"/>

  <!-- 
  See https://github.com/nlog/nlog/wiki/Configuration-file 
  for information on customizing logging rules and outputs.
   -->
  <targets>

    <!-- 
    add your targets here 
    See https://github.com/nlog/NLog/wiki/Targets for possible targets.
    See https://github.com/nlog/NLog/wiki/Layout-Renderers for the possible layout renderers.
    -->

    <!--
    Writing events to the a file with the date in the filename. 
    <target xsi:type="File" name="f" fileName="${basedir}/logs/${shortdate}.log"
            layout="${longdate} ${uppercase:${level}} ${message}" />
    -->
    <!-- add your targets here -->
    <!--调式打印控制台日志-->
    <!--<target name="console" xsi:type="ColoredConsole" layout="[${date:format=yyyy-MM-dd HH\:mm\:ss}][${level}] ${message} ${exception}"/>-->

    <!-- 记录一般INFO文本日志(启用异步) -->
    <target name="all-file" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${basedir}/Log/${shortdate}/Nlog-all.log"  layout="${longdate} ${event-properties:item=EventId.Id} ${uppercase:${level}} ${message}" maxArchiveFiles="100" />
    </target>

    <target name="own-file" xsi:type="AsyncWrapper" queueLimit="5000" overflowAction="Discard">
      <target xsi:type="File" fileName="${basedir}/Log/${shortdate}/${level}.log"  layout="${longdate} ${event-properties:item=EventId.Id} ${uppercase:${level}} ${message}" maxArchiveFiles="100" />
    </target>



    <!-- 发生错误异常记录数据库日志 -->
    <!--<target name="database" xsi:type="Database" connectionString="Data Source=xxxxxxxx;Initial Catalog=Log;Persist Security Info=True;User ID=sa;Password=123456"  commandText="insert into NLogException_HomeinnsInterface([CreateOn],[Origin],[LogLevel], [Message], [Exception],[StackTrace]) values (getdate(), @origin, @logLevel, @message,@exception, @stackTrace);">
      -->
    <!--日志来源-->
    <!--
      <parameter name="@origin" layout="${callsite}"/>
      -->
    <!--日志等级-->
    <!--
      <parameter name="@logLevel" layout="${level}"/>
      -->
    <!--日志消息-->
    <!--
      <parameter name="@message" layout="${message}"/>
      -->
    <!--异常信息-->
    <!--
      <parameter name="@exception" layout="${exception}" />
      -->
    <!--堆栈信息-->
    <!--
      <parameter name="@stackTrace" layout="${stacktrace}"/>
    </target>-->

    <!-- 发生致命错误发送邮件日志 -->
    <!--<target name="email" xsi:type="Mail"
               header="~~~~~header~~~~~"
               footer="~~~~~footer~~~~~"
               layout="${longdate} ${level} ${callsite} ${message} ${exception:format=Message, Type, ShortType, ToString, Method, StackTrace}"
               html="false"
               encoding="UTF-8"
               addNewLines="true"
               subject="${message}"
               to=""
               from=""
               body="${longdate} ${level} ${callsite} ${message} ${exception:format=Message, Type, ShortType, ToString, Method, StackTrace}"
               smtpUserName=""
               enableSsl="false"
               smtpPassword=""
               smtpAuthentication="Basic"
               smtpServer="smtp.163.com"
               smtpPort="25">
    </target>-->
  </targets>

  <rules>
    <!-- add your logging rules here -->

    <!--
    Write all events with minimal level of Debug (So Debug, Info, Warn, Error and Fatal, but not Trace)  to "f"-->
    <!--<logger name="*" minlevel="Debug" writeTo="f" />-->
    <!--<logger name="*" minlevel="Trace" writeTo="console" />-->
    <logger name="*" minlevel="Info" writeTo="all-file" />
    <logger name="RK.*" minlevel="Trace" writeTo="own-file" >
      <filters>
        <!--<when condition="equals(logger, 'Microsoft.AspNetCore.Hosting.Internal.WebHost')" action="Log" />-->
        <when condition="starts-with(logger, 'Microsoft')" action="Ignore" />
        <when condition="starts-with(logger, 'System')" action="Ignore" />
      </filters>
    </logger>
    <!--<logger name="*" minlevel="Error" writeTo="database"/>-->
    <!--<logger name="*" minlevel="Fatal" writeTo="email" />-->
  </rules>
</nlog>